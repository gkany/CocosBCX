# Endpoint for P2P node to listen on
p2p-endpoint = 0.0.0.0:8550

# P2P nodes to connect to on startup (may specify multiple times)
# seed-node = 

# JSON array of P2P nodes to connect to on startup
seed-nodes = ["139.199.128.15:8050","139.199.113.96:8050","172.17.25.166:8050","172.17.25.164:8050","172.17.25.169:8050","172.17.25.174:8050","172.17.25.173:8050","172.17.25.177:8050","161.117.230.14:8050","161.117.224.200:8050", "161.117.225.35:8050","161.117.189.35:8050"]
# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.
# checkpoint = 

# Endpoint for websocket RPC to listen on
rpc-endpoint = 0.0.0.0:8549

# Endpoint for TLS websocket RPC to listen on
# rpc-tls-endpoint = 

# The TLS certificate file for this server
# server-pem = 

# Password for this certificate
# server-pem-password = 

# File to read Genesis State from
# genesis-json = 

# Block signing key to use for init witnesses, overrides genesis file
# dbg-init-key = 

# JSON file specifying API permissions
# api-access = 

# Space-separated list of plugins to activate
# plugins = 

# Enable block production, even if the chain is stale.
enable-stale-production = false

# Percent of witnesses (0-99) that must be participating in order to produce blocks
required-participation = false

# ID of witness controlled by this node (e.g. "1.6.5", quotes are required, may specify multiple times)
# witness-id = 
#witness-id = "1.6.1"

# Tuple of [PublicKey, WIF private key] (may specify multiple times),The owner of the private key is nico
#private-key = ["COCOS7BHSn37tFj6Ty4mJK8LFvgL3kKz37FGNsjB6ps72H6fzUMDyYY","5Kf4TGCBX3cbAzrj9z2gxPov83emLHaJES8GKYinwoMzmusit9r"]

# Set the message delivery queue length, At least not less than 3000
message_cache_limit = 3000

# Whether to deduce in verification mode
deduce_in_verification_mode = 0

# Tuple of [PublicKey, WIF private key] (may specify multiple times), Debugger's name : nico 
#debug-private-key = ["COCOS7yE9skpBAirth3eSNMRtwq1jYswEE3uSbbuAtXTz88HtbpQsZf","5KAUeN3Yv51FzpLGGf4S1ByKpMqVFNzXTJK7euqc3NnaaLz1GJm"]

# Account ID to track history for (may specify multiple times)
# track-account = 

# Keep only those operations in memory that are related to account history tracking
partial-operations = 1

# Maximum number of operations per account will be kept in memory
max-ops-per-account = 1000

# Track market history by grouping orders into buckets of equal size measured in seconds specified as a JSON array of numbers
bucket-size = [60,300,900,1800,3600,14400,86400]

# How far back in time to track history for each bucket size, measured in the number of buckets (default: 1000)
history-per-size = 1000

# Will only store this amount of matched orders for each market in order history for querying, or those meet the other option, which has more data (default: 1000)
max-order-his-records-per-market = 1000

# Will only store matched orders in last X seconds for each market in order history for querying, or those meet the other option, which has more data (default: 259200 (3 days))
max-order-his-seconds-per-market = 259200

# RPC endpoint of a trusted validating node (required)
# trusted-node = 

# Block number after which to do a snapshot
# snapshot-at-block = 

# Block time (ISO format) after which to do a snapshot
# snapshot-at-time = 

# Pathname of JSON file where to store the snapshot
# snapshot-to = 
op_maxsize_proportion_percent=2

contract_private_data_size = 3072
contract_total_data_size = 10485760
